/* tslint:disable */
/* eslint-disable */
/**
 * ShafukuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface PartialTypeClass
 */
export interface PartialTypeClass {
    /**
     * 
     * @type {number}
     * @memberof PartialTypeClass
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PartialTypeClass
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PartialTypeClass
     */
    contents?: string;
    /**
     * 
     * @type {number}
     * @memberof PartialTypeClass
     */
    rewards?: number;
    /**
     * 
     * @type {string}
     * @memberof PartialTypeClass
     */
    orderer?: string;
    /**
     * 
     * @type {string}
     * @memberof PartialTypeClass
     */
    startDate?: string;
    /**
     * 
     * @type {string}
     * @memberof PartialTypeClass
     */
    endDate?: string;
    /**
     * 
     * @type {number}
     * @memberof PartialTypeClass
     */
    numOfRecruit?: number;
    /**
     * 
     * @type {Array<User>}
     * @memberof PartialTypeClass
     */
    assigners?: Array<User>;
}

/**
 * Check if a given object implements the PartialTypeClass interface.
 */
export function instanceOfPartialTypeClass(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PartialTypeClassFromJSON(json: any): PartialTypeClass {
    return PartialTypeClassFromJSONTyped(json, false);
}

export function PartialTypeClassFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartialTypeClass {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'contents': !exists(json, 'contents') ? undefined : json['contents'],
        'rewards': !exists(json, 'rewards') ? undefined : json['rewards'],
        'orderer': !exists(json, 'orderer') ? undefined : json['orderer'],
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'numOfRecruit': !exists(json, 'numOfRecruit') ? undefined : json['numOfRecruit'],
        'assigners': !exists(json, 'assigners') ? undefined : ((json['assigners'] as Array<any>).map(UserFromJSON)),
    };
}

export function PartialTypeClassToJSON(value?: PartialTypeClass | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'contents': value.contents,
        'rewards': value.rewards,
        'orderer': value.orderer,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'numOfRecruit': value.numOfRecruit,
        'assigners': value.assigners === undefined ? undefined : ((value.assigners as Array<any>).map(UserToJSON)),
    };
}

